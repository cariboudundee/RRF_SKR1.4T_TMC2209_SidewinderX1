{"version":3,"sources":["webpack:///src/plugins/ObjectModelBrowser/ObjectModelBrowser.vue","webpack:///./src/plugins/ObjectModelBrowser/ObjectModelBrowser.vue?cfec","webpack:///./node_modules/core-js/modules/es.set.js","webpack:///../../../src/components/VTreeview/VTreeview.ts","webpack:///../../../src/components/VTreeview/VTreeviewNode.ts","webpack:///../../../../src/components/VTreeview/util/filterTreeItems.ts","webpack:///./src/plugins/ObjectModelBrowser/ObjectModelBrowser.vue","webpack:///./src/plugins/ObjectModelBrowser/ObjectModelBrowser.vue?25d2","webpack:///./src/plugins/ObjectModelBrowser/ObjectModelBrowser.vue?9c7d","webpack:///./src/plugins/ObjectModelBrowser/index.js"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","_v","_s","active","length","attrs","uiFrozen","on","refresh","$t","modelTree","$event","scopedSlots","_u","key","fn","ref","item","type","_e","staticRenderFns","collection","collectionStrong","module","exports","init","Set","arguments","undefined","name","provide","treeview","props","default","dense","filter","hoverable","items","multipleActive","open","openAll","returnObject","search","value","data","level","activeCache","nodes","openCache","selectedCache","computed","excludedItems","excluded","i","watch","handler","oldKeys","Object","k","newKeys","getKeys","diff","oldSelectedCache","emitSelected","deep","created","getValue","map","mounted","$slots","prepend","methods","updateAll","keys","children","buildTree","parent","oldNode","hasOwnProperty","isSelected","isIndeterminate","isActive","isOpen","vnode","node","c","calculateState","selectionType","add","state","counts","Boolean","emitOpen","emitActive","emitNodeCache","handleNodeCacheWatcher","v","old","updateFn","emitFn","getDescendants","descendants","getParents","parents","register","unregister","isParent","updateActive","delete","updateSelected","isForced","changed","descendant","calculated","updateOpen","updateVnodeState","isExcluded","has","genChild","h","class","themeClasses","baseMixins","VTreeviewNodeProps","activatable","activeClass","color","expandIcon","indeterminateIcon","itemChildren","itemDisabled","itemKey","itemText","loadChildren","loadingIcon","offIcon","onIcon","openOnClick","rounded","selectable","selectedColor","shaped","transition","validator","includes","VTreeviewNode","inject","parentIsDisabled","hasLoaded","isLoading","disabled","child","text","scopedProps","leaf","selected","indeterminate","computedIcon","hasChildren","beforeDestroy","checkChildren","Promise","resolve","genLabel","$scopedSlots","label","slot","genPrependSlot","genAppendSlot","append","genContent","genToggle","click","e","genCheckbox","genLevel","genNode","setTextColor","genChildrenWrapper","genTransition","String","match","filterTreeItems","component","VBtn","VChip","VIcon","VSpacer","VToolbar","VTreeview","registerRoute","ObjectModelBrowser","Settings","ObjectModel","icon","caption","path"],"mappings":"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","file":"js/ObjectModelBrowser.0bad74e4.js","sourcesContent":["<template>\n\t<div class=\"mt-3\">\n\t\t<v-toolbar class=\"mb-3\">\n\t\t\tSelected node: {{ (active.length > 0) ? active[0] : 'None' }}\n\n\t\t\t<v-spacer></v-spacer>\n\n\t\t\t<v-btn color=\"info\" :disabled=\"uiFrozen\" @click=\"refresh\">\n\t\t\t\t<v-icon class=\"mr-1\">mdi-refresh</v-icon> {{ $t('button.refresh.caption') }}\n\t\t\t</v-btn>\n\t\t</v-toolbar>\n\n\t\t<v-treeview :items=\"modelTree\" open-on-click activatable :active.sync=\"active\">\n\t\t\t<template #append=\"{ item }\">\n\t\t\t\t<v-chip v-if=\"item.type\">{{ item.type }}</v-chip>\n\t\t\t</template>\n\t\t</v-treeview>\n\t</div>\n</template>\n\n<script>\n'use strict'\n\nimport { mapState, mapGetters } from 'vuex'\n\nexport default {\n\tcomputed: {\n\t\t...mapState('machine', ['model']),\n\t\t...mapGetters(['uiFrozen'])\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tactive: [],\n\t\t\tmodelTree: [],\n\t\t}\n\t},\n\tmounted() {\n\t\tthis.refresh();\n\t},\n\tmethods: {\n\t\tmakeModelTree(obj, path) {\n\t\t\tif (obj instanceof Array) {\n\t\t\t\treturn obj.map(function(item, index) {\n\t\t\t\t\tconst itemPath = path.slice(0);\n\t\t\t\t\titemPath[itemPath.length - 1] += `[${index}]`;\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tid: itemPath.join('.'),\n\t\t\t\t\t\tname: this.getItemLabel(index, item),\n\t\t\t\t\t\ttype: this.getItemType(item),\n\t\t\t\t\t\tchildren: this.makeModelTree(item, itemPath)\n\t\t\t\t\t}\n\t\t\t\t}, this);\n\t\t\t}\n\t\t\tif (obj !== null && obj instanceof Object) {\n\t\t\t\treturn Object.keys(obj)\n\t\t\t\t\t.filter(key => (path.length > 0) || (obj[key] !== null))\n\t\t\t\t\t.map(function(key) {\n\t\t\t\t\t\tconst itemPath = path.slice(0);\n\t\t\t\t\t\titemPath.push(key);\n\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tid: itemPath.join('.'),\n\t\t\t\t\t\t\tname: this.getItemLabel(key, obj[key]),\n\t\t\t\t\t\t\ttype: this.getItemType(obj[key]),\n\t\t\t\t\t\t\tchildren: this.makeModelTree(obj[key], itemPath)\n\t\t\t\t\t\t};\n\t\t\t\t\t}, this);\n\t\t\t}\n\t\t\treturn [];\n\t\t},\n\t\tgetItemLabel(name, value) {\n\t\t\tif (value === null) {\n\t\t\t\treturn `${name} = null`;\n\t\t\t}\n\t\t\tif ((value || value === '') && value.constructor === String) {\n\t\t\t\treturn `${name} = \"${value}\"`;\n\t\t\t}\n\t\t\tif (value instanceof Object) {\n\t\t\t\treturn name;\n\t\t\t}\n\t\t\treturn `${name} = ${value}`;\n\t\t},\n\t\tgetItemType(obj) {\n\t\t\tif (obj instanceof Array) {\n\t\t\t\treturn 'array';\n\t\t\t}\n\t\t\tif (obj !== null && obj instanceof Object) {\n\t\t\t\treturn 'object';\n\t\t\t}\n\t\t\treturn 'value';\n\t\t},\n\t\trefresh() {\n\t\t\tthis.modelTree = this.makeModelTree(this.model, []);\n\t\t}\n\t}\n}\n</script>\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"mt-3\"},[_c('v-toolbar',{staticClass:\"mb-3\"},[_vm._v(\" Selected node: \"+_vm._s((_vm.active.length > 0) ? _vm.active[0] : 'None')+\" \"),_c('v-spacer'),_c('v-btn',{attrs:{\"color\":\"info\",\"disabled\":_vm.uiFrozen},on:{\"click\":_vm.refresh}},[_c('v-icon',{staticClass:\"mr-1\"},[_vm._v(\"mdi-refresh\")]),_vm._v(\" \"+_vm._s(_vm.$t('button.refresh.caption'))+\" \")],1)],1),_c('v-treeview',{attrs:{\"items\":_vm.modelTree,\"open-on-click\":\"\",\"activatable\":\"\",\"active\":_vm.active},on:{\"update:active\":function($event){_vm.active=$event}},scopedSlots:_vm._u([{key:\"append\",fn:function(ref){\nvar item = ref.item;\nreturn [(item.type)?_c('v-chip',[_vm._v(_vm._s(item.type))]):_vm._e()]}}])})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","'use strict';\nvar collection = require('../internals/collection');\nvar collectionStrong = require('../internals/collection-strong');\n\n// `Set` constructor\n// https://tc39.github.io/ecma262/#sec-set-objects\nmodule.exports = collection('Set', function (init) {\n  return function Set() { return init(this, arguments.length ? arguments[0] : undefined); };\n}, collectionStrong);\n","// Styles\nimport './VTreeview.sass'\n\n// Types\nimport { VNode, VNodeChildrenArrayContents, PropType } from 'vue'\nimport { PropValidator } from 'vue/types/options'\nimport { TreeviewItemFunction } from 'vuetify/types'\n\n// Components\nimport VTreeviewNode, { VTreeviewNodeProps } from './VTreeviewNode'\n\n// Mixins\nimport Themeable from '../../mixins/themeable'\nimport { provide as RegistrableProvide } from '../../mixins/registrable'\n\n// Utils\nimport {\n  arrayDiff,\n  deepEqual,\n  getObjectValueByPath,\n} from '../../util/helpers'\nimport mixins from '../../util/mixins'\nimport { consoleWarn } from '../../util/console'\nimport {\n  filterTreeItems,\n  filterTreeItem,\n} from './util/filterTreeItems'\n\ntype VTreeviewNodeInstance = InstanceType<typeof VTreeviewNode>\n\ntype NodeCache = Set<string | number>\ntype NodeArray = (string | number)[]\n\ntype NodeState = {\n  parent: number | string | null\n  children: (number | string)[]\n  vnode: VTreeviewNodeInstance | null\n  isActive: boolean\n  isSelected: boolean\n  isIndeterminate: boolean\n  isOpen: boolean\n  item: any\n}\n\nexport default mixins(\n  RegistrableProvide('treeview'),\n  Themeable\n  /* @vue/component */\n).extend({\n  name: 'v-treeview',\n\n  provide (): object {\n    return { treeview: this }\n  },\n\n  props: {\n    active: {\n      type: Array,\n      default: () => ([]),\n    } as PropValidator<NodeArray>,\n    dense: Boolean,\n    filter: Function as PropType<TreeviewItemFunction>,\n    hoverable: Boolean,\n    items: {\n      type: Array,\n      default: () => ([]),\n    } as PropValidator<any[]>,\n    multipleActive: Boolean,\n    open: {\n      type: Array,\n      default: () => ([]),\n    } as PropValidator<NodeArray>,\n    openAll: Boolean,\n    returnObject: {\n      type: Boolean,\n      default: false, // TODO: Should be true in next major\n    },\n    search: String,\n    value: {\n      type: Array,\n      default: () => ([]),\n    } as PropValidator<NodeArray>,\n    ...VTreeviewNodeProps,\n  },\n\n  data: () => ({\n    level: -1,\n    activeCache: new Set() as NodeCache,\n    nodes: {} as Record<string | number, NodeState>,\n    openCache: new Set() as NodeCache,\n    selectedCache: new Set() as NodeCache,\n  }),\n\n  computed: {\n    excludedItems (): Set<string | number> {\n      const excluded = new Set<string|number>()\n\n      if (!this.search) return excluded\n\n      for (let i = 0; i < this.items.length; i++) {\n        filterTreeItems(\n          this.filter || filterTreeItem,\n          this.items[i],\n          this.search,\n          this.itemKey,\n          this.itemText,\n          this.itemChildren,\n          excluded\n        )\n      }\n\n      return excluded\n    },\n  },\n\n  watch: {\n    items: {\n      handler () {\n        const oldKeys = Object.keys(this.nodes).map(k => getObjectValueByPath(this.nodes[k].item, this.itemKey))\n        const newKeys = this.getKeys(this.items)\n        const diff = arrayDiff(newKeys, oldKeys)\n\n        // We only want to do stuff if items have changed\n        if (!diff.length && newKeys.length < oldKeys.length) return\n\n        // If nodes are removed we need to clear them from this.nodes\n        diff.forEach(k => delete this.nodes[k])\n\n        const oldSelectedCache = [...this.selectedCache]\n        this.selectedCache = new Set()\n        this.activeCache = new Set()\n        this.openCache = new Set()\n        this.buildTree(this.items)\n\n        // Only emit selected if selection has changed\n        // as a result of items changing. This fixes a\n        // potential double emit when selecting a node\n        // with dynamic children\n        if (!deepEqual(oldSelectedCache, [...this.selectedCache])) this.emitSelected()\n      },\n      deep: true,\n    },\n    active (value: (string | number | any)[]) {\n      this.handleNodeCacheWatcher(value, this.activeCache, this.updateActive, this.emitActive)\n    },\n    value (value: (string | number | any)[]) {\n      this.handleNodeCacheWatcher(value, this.selectedCache, this.updateSelected, this.emitSelected)\n    },\n    open (value: (string | number | any)[]) {\n      this.handleNodeCacheWatcher(value, this.openCache, this.updateOpen, this.emitOpen)\n    },\n  },\n\n  created () {\n    const getValue = (key: string | number) => this.returnObject ? getObjectValueByPath(key, this.itemKey) : key\n\n    this.buildTree(this.items)\n\n    for (const value of this.value.map(getValue)) {\n      this.updateSelected(value, true, true)\n    }\n\n    for (const active of this.active.map(getValue)) {\n      this.updateActive(active, true)\n    }\n  },\n\n  mounted () {\n    // Save the developer from themselves\n    if (this.$slots.prepend || this.$slots.append) {\n      consoleWarn('The prepend and append slots require a slot-scope attribute', this)\n    }\n\n    if (this.openAll) {\n      this.updateAll(true)\n    } else {\n      this.open.forEach(key => this.updateOpen(this.returnObject ? getObjectValueByPath(key, this.itemKey) : key, true))\n      this.emitOpen()\n    }\n  },\n\n  methods: {\n    /** @public */\n    updateAll (value: boolean) {\n      Object.keys(this.nodes).forEach(key => this.updateOpen(getObjectValueByPath(this.nodes[key].item, this.itemKey), value))\n      this.emitOpen()\n    },\n    getKeys (items: any[], keys: any[] = []) {\n      for (let i = 0; i < items.length; i++) {\n        const key = getObjectValueByPath(items[i], this.itemKey)\n        keys.push(key)\n        const children = getObjectValueByPath(items[i], this.itemChildren)\n        if (children) {\n          keys.push(...this.getKeys(children))\n        }\n      }\n\n      return keys\n    },\n    buildTree (items: any[], parent: (string | number | null) = null) {\n      for (let i = 0; i < items.length; i++) {\n        const item = items[i]\n        const key = getObjectValueByPath(item, this.itemKey)\n        const children = getObjectValueByPath(item, this.itemChildren, [])\n        const oldNode = this.nodes.hasOwnProperty(key) ? this.nodes[key] : {\n          isSelected: false, isIndeterminate: false, isActive: false, isOpen: false, vnode: null,\n        } as NodeState\n\n        const node: any = {\n          vnode: oldNode.vnode,\n          parent,\n          children: children.map((c: any) => getObjectValueByPath(c, this.itemKey)),\n          item,\n        }\n\n        this.buildTree(children, key)\n\n        // This fixed bug with dynamic children resetting selected parent state\n        if (!this.nodes.hasOwnProperty(key) && parent !== null && this.nodes.hasOwnProperty(parent)) {\n          node.isSelected = this.nodes[parent].isSelected\n        } else {\n          node.isSelected = oldNode.isSelected\n          node.isIndeterminate = oldNode.isIndeterminate\n        }\n\n        node.isActive = oldNode.isActive\n        node.isOpen = oldNode.isOpen\n\n        this.nodes[key] = node\n\n        if (children.length) {\n          const { isSelected, isIndeterminate } = this.calculateState(key, this.nodes)\n\n          node.isSelected = isSelected\n          node.isIndeterminate = isIndeterminate\n        }\n\n        // Don't forget to rebuild cache\n        if (this.nodes[key].isSelected && (this.selectionType === 'independent' || node.children.length === 0)) this.selectedCache.add(key)\n        if (this.nodes[key].isActive) this.activeCache.add(key)\n        if (this.nodes[key].isOpen) this.openCache.add(key)\n\n        this.updateVnodeState(key)\n      }\n    },\n    calculateState (node: string | number, state: Record<string | number, NodeState>) {\n      const children = state[node].children\n      const counts = children.reduce((counts: number[], child: string | number) => {\n        counts[0] += +Boolean(state[child].isSelected)\n        counts[1] += +Boolean(state[child].isIndeterminate)\n\n        return counts\n      }, [0, 0])\n\n      const isSelected = !!children.length && counts[0] === children.length\n      const isIndeterminate = !isSelected && (counts[0] > 0 || counts[1] > 0)\n\n      return {\n        isSelected,\n        isIndeterminate,\n      }\n    },\n    emitOpen () {\n      this.emitNodeCache('update:open', this.openCache)\n    },\n    emitSelected () {\n      this.emitNodeCache('input', this.selectedCache)\n    },\n    emitActive () {\n      this.emitNodeCache('update:active', this.activeCache)\n    },\n    emitNodeCache (event: string, cache: NodeCache) {\n      this.$emit(event, this.returnObject ? [...cache].map(key => this.nodes[key].item) : [...cache])\n    },\n    handleNodeCacheWatcher (value: any[], cache: NodeCache, updateFn: Function, emitFn: Function) {\n      value = this.returnObject ? value.map(v => getObjectValueByPath(v, this.itemKey)) : value\n      const old = [...cache]\n      if (deepEqual(old, value)) return\n\n      old.forEach(key => updateFn(key, false))\n      value.forEach(key => updateFn(key, true))\n\n      emitFn()\n    },\n    getDescendants (key: string | number, descendants: NodeArray = []) {\n      const children = this.nodes[key].children\n\n      descendants.push(...children)\n\n      for (let i = 0; i < children.length; i++) {\n        descendants = this.getDescendants(children[i], descendants)\n      }\n\n      return descendants\n    },\n    getParents (key: string | number) {\n      let parent = this.nodes[key].parent\n\n      const parents = []\n      while (parent !== null) {\n        parents.push(parent)\n        parent = this.nodes[parent].parent\n      }\n\n      return parents\n    },\n    register (node: VTreeviewNodeInstance) {\n      const key = getObjectValueByPath(node.item, this.itemKey)\n      this.nodes[key].vnode = node\n\n      this.updateVnodeState(key)\n    },\n    unregister (node: VTreeviewNodeInstance) {\n      const key = getObjectValueByPath(node.item, this.itemKey)\n      if (this.nodes[key]) this.nodes[key].vnode = null\n    },\n    isParent (key: string | number) {\n      return this.nodes[key].children && this.nodes[key].children.length\n    },\n    updateActive (key: string | number, isActive: boolean) {\n      if (!this.nodes.hasOwnProperty(key)) return\n\n      if (!this.multipleActive) {\n        this.activeCache.forEach(active => {\n          this.nodes[active].isActive = false\n          this.updateVnodeState(active)\n          this.activeCache.delete(active)\n        })\n      }\n\n      const node = this.nodes[key]\n      if (!node) return\n\n      if (isActive) this.activeCache.add(key)\n      else this.activeCache.delete(key)\n\n      node.isActive = isActive\n\n      this.updateVnodeState(key)\n    },\n    updateSelected (key: string | number, isSelected: boolean, isForced = false) {\n      if (!this.nodes.hasOwnProperty(key)) return\n\n      const changed = new Map()\n\n      if (this.selectionType !== 'independent') {\n        for (const descendant of this.getDescendants(key)) {\n          if (!getObjectValueByPath(this.nodes[descendant].item, this.itemDisabled) || isForced) {\n            this.nodes[descendant].isSelected = isSelected\n            this.nodes[descendant].isIndeterminate = false\n            changed.set(descendant, isSelected)\n          }\n        }\n\n        const calculated = this.calculateState(key, this.nodes)\n        this.nodes[key].isSelected = isSelected\n        this.nodes[key].isIndeterminate = calculated.isIndeterminate\n        changed.set(key, isSelected)\n\n        for (const parent of this.getParents(key)) {\n          const calculated = this.calculateState(parent, this.nodes)\n          this.nodes[parent].isSelected = calculated.isSelected\n          this.nodes[parent].isIndeterminate = calculated.isIndeterminate\n          changed.set(parent, calculated.isSelected)\n        }\n      } else {\n        this.nodes[key].isSelected = isSelected\n        this.nodes[key].isIndeterminate = false\n        changed.set(key, isSelected)\n      }\n\n      for (const [key, value] of changed.entries()) {\n        this.updateVnodeState(key)\n\n        if (this.selectionType === 'leaf' && this.isParent(key)) continue\n\n        value === true ? this.selectedCache.add(key) : this.selectedCache.delete(key)\n      }\n    },\n    updateOpen (key: string | number, isOpen: boolean) {\n      if (!this.nodes.hasOwnProperty(key)) return\n\n      const node = this.nodes[key]\n      const children = getObjectValueByPath(node.item, this.itemChildren)\n\n      if (children && !children.length && node.vnode && !node.vnode.hasLoaded) {\n        node.vnode.checkChildren().then(() => this.updateOpen(key, isOpen))\n      } else if (children && children.length) {\n        node.isOpen = isOpen\n\n        node.isOpen ? this.openCache.add(key) : this.openCache.delete(key)\n\n        this.updateVnodeState(key)\n      }\n    },\n    updateVnodeState (key: string | number) {\n      const node = this.nodes[key]\n\n      if (node && node.vnode) {\n        node.vnode.isSelected = node.isSelected\n        node.vnode.isIndeterminate = node.isIndeterminate\n        node.vnode.isActive = node.isActive\n        node.vnode.isOpen = node.isOpen\n      }\n    },\n    isExcluded (key: string | number) {\n      return !!this.search && this.excludedItems.has(key)\n    },\n  },\n\n  render (h): VNode {\n    const children: VNodeChildrenArrayContents = this.items.length\n      ? this.items.filter(item => {\n        return !this.isExcluded(getObjectValueByPath(item, this.itemKey))\n      }).map(item => {\n        const genChild = VTreeviewNode.options.methods.genChild.bind(this)\n\n        return genChild(item, getObjectValueByPath(item, this.itemDisabled))\n      })\n      /* istanbul ignore next */\n      : this.$slots.default! // TODO: remove type annotation with TS 3.2\n\n    return h('div', {\n      staticClass: 'v-treeview',\n      class: {\n        'v-treeview--hoverable': this.hoverable,\n        'v-treeview--dense': this.dense,\n        ...this.themeClasses,\n      },\n    }, children)\n  },\n})\n","// Components\nimport { VExpandTransition } from '../transitions'\nimport { VIcon } from '../VIcon'\nimport VTreeview from './VTreeview'\n\n// Mixins\nimport { inject as RegistrableInject } from '../../mixins/registrable'\nimport Colorable from '../../mixins/colorable'\n\n// Utils\nimport mixins, { ExtractVue } from '../../util/mixins'\nimport { getObjectValueByPath, createRange } from '../../util/helpers'\n\n// Types\nimport { VNode, VNodeChildren, PropType } from 'vue'\nimport { PropValidator } from 'vue/types/options'\n\ntype VTreeViewInstance = InstanceType<typeof VTreeview>\n\nconst baseMixins = mixins(\n  Colorable,\n  RegistrableInject('treeview')\n)\n\ninterface options extends ExtractVue<typeof baseMixins> {\n  treeview: VTreeViewInstance\n}\n\nexport const VTreeviewNodeProps = {\n  activatable: Boolean,\n  activeClass: {\n    type: String,\n    default: 'v-treeview-node--active',\n  },\n  color: {\n    type: String,\n    default: 'primary',\n  },\n  expandIcon: {\n    type: String,\n    default: '$subgroup',\n  },\n  indeterminateIcon: {\n    type: String,\n    default: '$checkboxIndeterminate',\n  },\n  itemChildren: {\n    type: String,\n    default: 'children',\n  },\n  itemDisabled: {\n    type: String,\n    default: 'disabled',\n  },\n  itemKey: {\n    type: String,\n    default: 'id',\n  },\n  itemText: {\n    type: String,\n    default: 'name',\n  },\n  loadChildren: Function as PropType<(item: any) => Promise<void>>,\n  loadingIcon: {\n    type: String,\n    default: '$loading',\n  },\n  offIcon: {\n    type: String,\n    default: '$checkboxOff',\n  },\n  onIcon: {\n    type: String,\n    default: '$checkboxOn',\n  },\n  openOnClick: Boolean,\n  rounded: Boolean,\n  selectable: Boolean,\n  selectedColor: {\n    type: String,\n    default: 'accent',\n  },\n  shaped: Boolean,\n  transition: Boolean,\n  selectionType: {\n    type: String as PropType<'leaf' | 'independent'>,\n    default: 'leaf',\n    validator: (v: string) => ['leaf', 'independent'].includes(v),\n  },\n}\n\n/* @vue/component */\nconst VTreeviewNode = baseMixins.extend<options>().extend({\n  name: 'v-treeview-node',\n\n  inject: {\n    treeview: {\n      default: null,\n    },\n  },\n\n  props: {\n    level: Number,\n    item: {\n      type: Object,\n      default: () => null,\n    } as PropValidator<Record<string, unknown> | null>,\n    parentIsDisabled: Boolean,\n    ...VTreeviewNodeProps,\n  },\n\n  data: () => ({\n    hasLoaded: false,\n    isActive: false, // Node is selected (row)\n    isIndeterminate: false, // Node has at least one selected child\n    isLoading: false,\n    isOpen: false, // Node is open/expanded\n    isSelected: false, // Node is selected (checkbox)\n  }),\n\n  computed: {\n    disabled (): boolean {\n      return (\n        getObjectValueByPath(this.item, this.itemDisabled) ||\n        (this.parentIsDisabled && this.selectionType === 'leaf')\n      )\n    },\n    key (): string {\n      return getObjectValueByPath(this.item, this.itemKey)\n    },\n    children (): any[] | null {\n      const children = getObjectValueByPath(this.item, this.itemChildren)\n      return children && children.filter((child: any) => !this.treeview.isExcluded(getObjectValueByPath(child, this.itemKey)))\n    },\n    text (): string {\n      return getObjectValueByPath(this.item, this.itemText)\n    },\n    scopedProps (): object {\n      return {\n        item: this.item,\n        leaf: !this.children,\n        selected: this.isSelected,\n        indeterminate: this.isIndeterminate,\n        active: this.isActive,\n        open: this.isOpen,\n      }\n    },\n    computedIcon (): string {\n      if (this.isIndeterminate) return this.indeterminateIcon\n      else if (this.isSelected) return this.onIcon\n      else return this.offIcon\n    },\n    hasChildren (): boolean {\n      return !!this.children && (!!this.children.length || !!this.loadChildren)\n    },\n  },\n\n  created () {\n    this.treeview.register(this)\n  },\n\n  beforeDestroy () {\n    this.treeview.unregister(this)\n  },\n\n  methods: {\n    checkChildren (): Promise<void> {\n      return new Promise<void>(resolve => {\n        // TODO: Potential issue with always trying\n        // to load children if response is empty?\n        if (!this.children || this.children.length || !this.loadChildren || this.hasLoaded) return resolve()\n\n        this.isLoading = true\n        resolve(this.loadChildren(this.item))\n      }).then(() => {\n        this.isLoading = false\n        this.hasLoaded = true\n      })\n    },\n    open () {\n      this.isOpen = !this.isOpen\n      this.treeview.updateOpen(this.key, this.isOpen)\n      this.treeview.emitOpen()\n    },\n    genLabel () {\n      const children = []\n\n      if (this.$scopedSlots.label) children.push(this.$scopedSlots.label(this.scopedProps))\n      else children.push(this.text)\n\n      return this.$createElement('div', {\n        slot: 'label',\n        staticClass: 'v-treeview-node__label',\n      }, children)\n    },\n    genPrependSlot () {\n      if (!this.$scopedSlots.prepend) return null\n\n      return this.$createElement('div', {\n        staticClass: 'v-treeview-node__prepend',\n      }, this.$scopedSlots.prepend(this.scopedProps))\n    },\n    genAppendSlot () {\n      if (!this.$scopedSlots.append) return null\n\n      return this.$createElement('div', {\n        staticClass: 'v-treeview-node__append',\n      }, this.$scopedSlots.append(this.scopedProps))\n    },\n    genContent () {\n      const children = [\n        this.genPrependSlot(),\n        this.genLabel(),\n        this.genAppendSlot(),\n      ]\n\n      return this.$createElement('div', {\n        staticClass: 'v-treeview-node__content',\n      }, children)\n    },\n    genToggle () {\n      return this.$createElement(VIcon, {\n        staticClass: 'v-treeview-node__toggle',\n        class: {\n          'v-treeview-node__toggle--open': this.isOpen,\n          'v-treeview-node__toggle--loading': this.isLoading,\n        },\n        slot: 'prepend',\n        on: {\n          click: (e: MouseEvent) => {\n            e.stopPropagation()\n\n            if (this.isLoading) return\n\n            this.checkChildren().then(() => this.open())\n          },\n        },\n      }, [this.isLoading ? this.loadingIcon : this.expandIcon])\n    },\n    genCheckbox () {\n      return this.$createElement(VIcon, {\n        staticClass: 'v-treeview-node__checkbox',\n        props: {\n          color: this.isSelected || this.isIndeterminate ? this.selectedColor : undefined,\n          disabled: this.disabled,\n        },\n        on: {\n          click: (e: MouseEvent) => {\n            e.stopPropagation()\n\n            if (this.isLoading) return\n\n            this.checkChildren().then(() => {\n              // We nextTick here so that items watch in VTreeview has a chance to run first\n              this.$nextTick(() => {\n                this.isSelected = !this.isSelected\n                this.isIndeterminate = false\n\n                this.treeview.updateSelected(this.key, this.isSelected)\n                this.treeview.emitSelected()\n              })\n            })\n          },\n        },\n      }, [this.computedIcon])\n    },\n    genLevel (level: number) {\n      return createRange(level).map(() => this.$createElement('div', {\n        staticClass: 'v-treeview-node__level',\n      }))\n    },\n    genNode () {\n      const children = [this.genContent()]\n\n      if (this.selectable) children.unshift(this.genCheckbox())\n\n      if (this.hasChildren) {\n        children.unshift(this.genToggle())\n      } else {\n        children.unshift(...this.genLevel(1))\n      }\n\n      children.unshift(...this.genLevel(this.level))\n\n      return this.$createElement('div', this.setTextColor(this.isActive && this.color, {\n        staticClass: 'v-treeview-node__root',\n        class: {\n          [this.activeClass]: this.isActive,\n        },\n        on: {\n          click: () => {\n            if (this.openOnClick && this.hasChildren) {\n              this.checkChildren().then(this.open)\n            } else if (this.activatable && !this.disabled) {\n              this.isActive = !this.isActive\n              this.treeview.updateActive(this.key, this.isActive)\n              this.treeview.emitActive()\n            }\n          },\n        },\n      }), children)\n    },\n    genChild (item: any, parentIsDisabled: boolean) {\n      return this.$createElement(VTreeviewNode, {\n        key: getObjectValueByPath(item, this.itemKey),\n        props: {\n          activatable: this.activatable,\n          activeClass: this.activeClass,\n          item,\n          selectable: this.selectable,\n          selectedColor: this.selectedColor,\n          color: this.color,\n          expandIcon: this.expandIcon,\n          indeterminateIcon: this.indeterminateIcon,\n          offIcon: this.offIcon,\n          onIcon: this.onIcon,\n          loadingIcon: this.loadingIcon,\n          itemKey: this.itemKey,\n          itemText: this.itemText,\n          itemDisabled: this.itemDisabled,\n          itemChildren: this.itemChildren,\n          loadChildren: this.loadChildren,\n          transition: this.transition,\n          openOnClick: this.openOnClick,\n          rounded: this.rounded,\n          shaped: this.shaped,\n          level: this.level + 1,\n          selectionType: this.selectionType,\n          parentIsDisabled,\n        },\n        scopedSlots: this.$scopedSlots,\n      })\n    },\n    genChildrenWrapper () {\n      if (!this.isOpen || !this.children) return null\n\n      const children = [this.children.map(c => this.genChild(c, this.disabled))]\n\n      return this.$createElement('div', {\n        staticClass: 'v-treeview-node__children',\n      }, children)\n    },\n    genTransition () {\n      return this.$createElement(VExpandTransition, [this.genChildrenWrapper()])\n    },\n  },\n\n  render (h): VNode {\n    const children: VNodeChildren = [this.genNode()]\n\n    if (this.transition) children.push(this.genTransition())\n    else children.push(this.genChildrenWrapper())\n\n    return h('div', {\n      staticClass: 'v-treeview-node',\n      class: {\n        'v-treeview-node--leaf': !this.hasChildren,\n        'v-treeview-node--click': this.openOnClick,\n        'v-treeview-node--disabled': this.disabled,\n        'v-treeview-node--rounded': this.rounded,\n        'v-treeview-node--shaped': this.shaped,\n        'v-treeview-node--selected': this.isSelected,\n      },\n      attrs: {\n        'aria-expanded': String(this.isOpen),\n      },\n    }, children)\n  },\n})\n\nexport default VTreeviewNode\n","import { getObjectValueByPath } from '../../../util/helpers'\nimport { TreeviewItemFunction } from 'vuetify/types'\n\nexport function filterTreeItem (item: object, search: string, textKey: string): boolean {\n  const text = getObjectValueByPath(item, textKey)\n\n  return text.toLocaleLowerCase().indexOf(search.toLocaleLowerCase()) > -1\n}\n\nexport function filterTreeItems (\n  filter: TreeviewItemFunction,\n  item: any,\n  search: string,\n  idKey: string,\n  textKey: string,\n  childrenKey: string,\n  excluded: Set<string | number>\n): boolean {\n  if (filter(item, search, textKey)) {\n    return true\n  }\n\n  const children = getObjectValueByPath(item, childrenKey)\n\n  if (children) {\n    let match = false\n    for (let i = 0; i < children.length; i++) {\n      if (filterTreeItems(filter, children[i], search, idKey, textKey, childrenKey, excluded)) {\n        match = true\n      }\n    }\n\n    if (match) return true\n  }\n\n  excluded.add(getObjectValueByPath(item, idKey))\n\n  return false\n}\n","import { render, staticRenderFns } from \"./ObjectModelBrowser.vue?vue&type=template&id=eed90ca2&\"\nimport script from \"./ObjectModelBrowser.vue?vue&type=script&lang=js&\"\nexport * from \"./ObjectModelBrowser.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VBtn } from 'vuetify/lib/components/VBtn';\nimport { VChip } from 'vuetify/lib/components/VChip';\nimport { VIcon } from 'vuetify/lib/components/VIcon';\nimport { VSpacer } from 'vuetify/lib/components/VGrid';\nimport { VToolbar } from 'vuetify/lib/components/VToolbar';\nimport { VTreeview } from 'vuetify/lib/components/VTreeview';\ninstallComponents(component, {VBtn,VChip,VIcon,VSpacer,VToolbar,VTreeview})\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ObjectModelBrowser.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ObjectModelBrowser.vue?vue&type=script&lang=js&\"","export * from \"-!../../../node_modules/cache-loader/dist/cjs.js?{\\\"cacheDirectory\\\":\\\"node_modules/.cache/vue-loader\\\",\\\"cacheIdentifier\\\":\\\"3e016849-vue-loader-template\\\"}!../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ObjectModelBrowser.vue?vue&type=template&id=eed90ca2&\"","'use strict'\n\nimport { registerRoute } from '../../routes'\n\nimport ObjectModelBrowser from './ObjectModelBrowser.vue'\n\n// Register a route via Settings -> Object Model\nregisterRoute(ObjectModelBrowser, {\n\tSettings: {\n\t\tObjectModel: {\n\t\t\ticon: 'mdi-file-tree',\n\t\t\tcaption: 'plugins.objectModelBrowser.menuCaption',\n\t\t\tpath: '/ObjectModel'\n\t\t}\n\t}\n});\n"],"sourceRoot":""}